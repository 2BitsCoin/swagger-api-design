schemas:

  # Objects

  Asset:
    description: Asset main info object
    type: object
    properties:
      id:
        $ref: '#/schemas/AssetId'
      name:
        $ref: '#/schemas/AssetName'
      precision:
        $ref: '#/schemas/AssetPrecision'
      issuer:
        $ref: '#/schemas/Address'
      quantity:
        $ref: '#/schemas/AssetQuantity'
      reissuable:
        $ref: '#/schemas/AssetIsReissuable'
      timestamp:
        $ref: '#/schemas/Timestamp'

  AssetPair:
    description: Pair of assets from Waves Matcher
    type: object
    properties:
      amountAsset:
        $ref: '#/schemas/AssetId'
      priceAsset:
        $ref: '#/schemas/AssetId'

  Balance:
    description: ID, name, and regular balance of an asset
    type: object
    properties:
      id:
        $ref: '#/schemas/AssetId'
      name:
        $ref: '#/schemas/AssetName'
      balance:
        $ref: '#/schemas/RegularBalance'

  Block:
    description: Block with transactions and metadata
    type: object
    properties:
      version:
        type: integer
        example: 2
      timestamp:
        type: integer
        example: 1501505945003
      reference:
        type: string
        example: u31L28eqyi4FZNv877az1s2SawXf2adbG47dpMrektEB2ke4BqprpGDz3py6rbb9n2sUR6SeTSx6MSeusc9yHCp
      nxt-consensus:
        type: object
        properties:
          baseTarget:
            type: integer
            example: 254
          generationSignature:
            type: string
            example: D48jL46a7iyvooDQj25XkYJSm1d7kkAbNYWzzeWffAB7
      transactions:
        decription: Transaction of any type fits here
        type: array
        items:
          $ref: '#/schemas/TransferTransaction'
      generator:
        $ref: '#/schemas/Address'
      signature:
        type: string
        example: 62tPPQS5tEkDScFf6FyXXE71VwFsppp79wF1hwo11saE4Q6MHUF2TN4Yg5zVprNAH4MSwHy5Zm5s5ZGEbTF9n6gz
      fee:
        $ref: '#/schemas/Amount'
      blocksize:
        type: integer
        example: 218
      height:
        $ref: '#/schemas/BlockHeight'
      score:
        $ref: '#/schemas/Score'

  Fees:
    description: Object with minimum fee amounts for every transaction type
    type: object
    properties:
      transferFee:
        $ref: '#/schemas/FeeAssetsToAmounts'
      issueFee:
        $ref: '#/schemas/FeeAssetsToAmounts'
      reissueFee:
        $ref: '#/schemas/FeeAssetsToAmounts'
      burnFee:
        $ref: '#/schemas/FeeAssetsToAmounts'
      createAliasFee:
        $ref: '#/schemas/FeeAssetsToAmounts'
      leaseFee:
        $ref: '#/schemas/FeeAssetsToAmounts'
      cancelLeasingFee:
        $ref: '#/schemas/FeeAssetsToAmounts'
      exchangeFee:
        $ref: '#/schemas/FeeAssetsToAmounts'

  FeeAssetsToAmounts:
    description: Map of IDs of assets to amounts in those assets
    type: object
    additionalProperties:
      $ref: '#/schemas/Amount'
    example:
      WAVES: 0.001

  Order:
    description: Waves Matcher order
    type: object
    properties:
      id:
        $ref: '#/schemas/OrderId'
      type:
        $ref: '#/schemas/OrderType'
      senderPublicKey:
        $ref: '#/schemas/PublicKey'
      matcherPublicKey:
        $ref: '#/schemas/PublicKey'
      pair:
        $ref: '#/schemas/AssetPair'
      price:
        $ref: '#/schemas/Amount'
      amount:
        $ref: '#/schemas/Amount'
      matcherFee:
        $ref: '#/schemas/Amount'
      timestamp:
        $ref: '#/schemas/Timestamp'
      expiration:
        $ref: '#/schemas/Timestamp'
      signature:
        $ref: '#/schemas/OrderSignature'

  # TODO : check if numbers below are correct
  WavesDetailedBalance:
    description: Detailed Waves balance object
    type: object
    properties:
      regular:
        $ref: '#/schemas/RegularBalance'
      generating:
        type: integer
        example: 100
      leased:
        type: integer
        example: 43.95
      available:
        type: integer
        example: 0
      effective:
        type: integer
        example: 100

  # Transactions

  TransferTransaction:
    description: TODO # TODO
    type: object
    properties:
      transactionType:
        $ref: '#/schemas/TransactionType'
        example: transfer
      id:
        $ref: '#/schemas/TransactionId'
      senderPublicKey:
        $ref: '#/schemas/PublicKey'
      sender:
        $ref: '#/schemas/Address'
      recipient#address:
        $ref: '#/schemas/Address'
      recipient#alias:
        $ref: '#/schemas/Alias'
      recipientAddress:
        $ref: '#/schemas/AddressUnprefixed'
      attachment:
        $ref: '#/schemas/TransactionAttachment'
      assetId:
        $ref: '#/schemas/AssetId'
      amount:
        $ref: '#/schemas/Amount'
      feeAssetId:
        $ref: '#/schemas/AssetId'
      fee:
        $ref: '#/schemas/Amount'
      timestamp:
        $ref: '#/schemas/Timestamp'
      signature:
        $ref: '#/schemas/TransactionSignature'

  IssueTransaction:
    description: TODO # TODO
    type: object
    properties:
      transactionType:
        $ref: '#/schemas/TransactionType'
        example: issue
      id:
        $ref: '#/schemas/TransactionId'
      senderPublicKey:
        $ref: '#/schemas/PublicKey'
      sender:
        $ref: '#/schemas/Address'
      assetId:
        $ref: '#/schemas/AssetId'
      name:
        $ref: '#/schemas/AssetName'
      description:
        $ref: '#/schemas/AssetDescription'
      precision:
        $ref: '#/schemas/AssetPrecision'
      quantity:
        $ref: '#/schemas/AssetQuantity'
      reissuable:
        $ref: '#/schemas/AssetIsReissuable'
      fee:
        $ref: '#/schemas/Amount'
      timestamp:
        $ref: '#/schemas/Timestamp'
      signature:
        $ref: '#/schemas/TransactionSignature'

  ReissueTransaction:
    description: TODO # TODO
    type: object
    properties:
      transactionType:
        $ref: '#/schemas/TransactionType'
        example: reissue
      id:
        $ref: '#/schemas/TransactionId'
      senderPublicKey:
        $ref: '#/schemas/PublicKey'
      sender:
        $ref: '#/schemas/Address'
      assetId:
        $ref: '#/schemas/AssetId'
      quantity:
        $ref: '#/schemas/AssetQuantity'
      reissuable:
        $ref: '#/schemas/AssetIsReissuable'
      fee:
        $ref: '#/schemas/Amount'
      timestamp:
        $ref: '#/schemas/Timestamp'
      signature:
        $ref: '#/schemas/TransactionSignature'

  BurnTransaction:
    description: TODO # TODO
    type: object
    properties:
      transactionType:
        $ref: '#/schemas/TransactionType'
        example: reissue
      id:
        $ref: '#/schemas/TransactionId'
      senderPublicKey:
        $ref: '#/schemas/PublicKey'
      sender:
        $ref: '#/schemas/Address'
      assetId:
        $ref: '#/schemas/AssetId'
      quantity:
        $ref: '#/schemas/AssetQuantity'
      fee:
        $ref: '#/schemas/Amount'
      timestamp:
        $ref: '#/schemas/Timestamp'
      signature:
        $ref: '#/schemas/TransactionSignature'

  CreateAliasTransaction:
    description: TODO # TODO
    type: object
    properties:
      transactionType:
        $ref: '#/schemas/TransactionType'
        example: createAlias
      id:
        $ref: '#/schemas/TransactionId'
      senderPublicKey:
        $ref: '#/schemas/PublicKey'
      sender:
        $ref: '#/schemas/Address'
      alias:
        $ref: '#/schemas/Alias'
      fee:
        $ref: '#/schemas/Amount'
      timestamp:
        $ref: '#/schemas/Timestamp'
      signature:
        $ref: '#/schemas/TransactionSignature'

  LeaseTransaction:
    description: TODO # TODO
    type: object
    properties:
      transactionType:
        $ref: '#/schemas/TransactionType'
        example: lease
      id:
        $ref: '#/schemas/TransactionId'
      senderPublicKey:
        $ref: '#/schemas/PublicKey'
      sender:
        $ref: '#/schemas/Address'
      recipient#address:
        $ref: '#/schemas/Address'
      recipient#alias:
        $ref: '#/schemas/Alias'
      recipientAddress:
        $ref: '#/schemas/AddressUnprefixed'
      amount:
        $ref: '#/schemas/Amount'
      fee:
        $ref: '#/schemas/Amount'
      timestamp:
        $ref: '#/schemas/Timestamp'
      signature:
        $ref: '#/schemas/TransactionSignature'

  CancelLeasingTransaction:
    description: TODO # TODO
    type: object
    properties:
      transactionType:
        $ref: '#/schemas/TransactionType'
        example: cancelLeasing
      id:
        $ref: '#/schemas/TransactionId'
      senderPublicKey:
        $ref: '#/schemas/PublicKey'
      sender:
        $ref: '#/schemas/Address'
      leaseTransactionId:
        $ref: '#/schemas/TransactionId'
      fee:
        $ref: '#/schemas/Amount'
      timestamp:
        $ref: '#/schemas/Timestamp'
      signature:
        $ref: '#/schemas/TransactionSignature'

  ExchangeTransaction:
    description: TODO # TODO
    type: object
    properties:
      transactionType:
        $ref: '#/schemas/TransactionType'
        example: exchange
      id:
        $ref: '#/schemas/TransactionId'
      senderPublicKey:
        $ref: '#/schemas/PublicKey'
      sender:
        $ref: '#/schemas/Address'
      amount:
        $ref: '#/schemas/Amount'
      price:
        $ref: '#/schemas/Amount'
      buyOrder:
        $ref: '#/schemas/Order'
      buyMatcherFee:
        $ref: '#/schemas/Amount'
      sellOrder:
        $ref: '#/schemas/Order'
      sellMatcherFee:
        $ref: '#/schemas/Amount'
      fee:
        $ref: '#/schemas/Amount'
      timestamp:
        $ref: '#/schemas/Timestamp'
      signature:
        $ref: '#/schemas/TransactionSignature'

  # Primitives

  Address:
    description: _Address_ | Prefix 'address:' and Base58-encoded wallet address
    type: string
    example: address:3PMgh8ra7v9USWUJxUCxKQKr6PM3MgqNVR8

  AddressUnprefixed:
    description: _AddressUnprefixed_ | Base58-encoded wallet address only
    type: string
    example: 3PMgh8ra7v9USWUJxUCxKQKr6PM3MgqNVR8

  Alias:
    description: _Alias_ | Prefix 'alias:X:' (where X is replaced with network byte) and human-readable shortcut for an address
    type: string
    example: alias:W:sasha
    minLength: 12
    maxLength: 38

  Amount:
    description: _Amount_ | Amount of Waves or any asset
    type: number
    minimum: 0
    example: 14.7

  ArbitrarySignature:
    description: _ArbitrarySignature_ | Base58-encoded signature of any arbitrary chosen data
    type: string
    example: 4DqmA8kut5V6Fag68D37CHrPd6KzwB3nXScWv91X65MbKujEYZE5QKtkZySXtdZLKdaL6657w4Y2DmnBrhuMfric

  AssetDescription:
    description: _AssetDescription_ | Arbitrary text about an asset
    type: string
    example: Hello!

  AssetId:
    description: _AssetId_ | Base58-encoded asset unique ID (or `WAVES` for Waves currency itself) | Note that for signatures an empty string is used instead of `WAVES`
    type: string
    example: WAVES

  AssetIsReissuable:
    description: _AssetIsReissuable_ | Flad telling if an asset is reissuable
    type: boolean
    example: false

  AssetName:
    description: _AssetName_ | Name of an asset
    type: string
    example: Waves

  AssetPrecision:
    description: _AssetPrecision_ | Number of decimal digits of an asset
    type: integer
    enum: [0, 1, 2, 3, 4, 5, 6, 7, 8]
    example: 8

  AssetQuantity:
    description: _AssetQuantity_ | Quantity of an asset
    type: integer
    example: 100000000

  BlockHeight:
    description: _BlockHeight_ | Index of a block in blockchain
    type: integer
    minimum: 0
    example: 667

  BlockSignature:
    description: _BlockSignature_ | Base58-encoded block signature
    type: string
    example: 3b2QWFpkTAP94ydewvRc6CyxRtcc7q6DpvYVFFfGERyy5sjD3pAVHdPCCDXi7XKDZePxHD35nJJroaQWUy6EZcmz

  OrderId:
    description: _OrderId_ | Base58-encoded ID of an order on Waves Matcher
    type: string
    example: CQHAZMKi7ptwG7AyCqgi7eqKeqKyU1KLzZcuX9XVj9yG

  OrderSignature:
    description: _OrderSignature_ | Base58-encoded order signature
    type: string
    example: 3jNJQbsET3wN8KtnNnbd5BvrJGXxEmqmkzS8ZyscQfowGiqyzo6jys8uZyk5RWHQwuaCbcw6jWemEXqtwrNNnGAr

  OrderType:
    description: _OrderType_ | Type of an order on Waves Matcher
    type: string
    enum:
      - buy
      - sell

  PrivateKey:
    description: _PrivateKey_ | Base58-encoded private key bytes
    type: string
    example: 2dWyK1EDM1is63EeH3DeZQTm72tG77V8CULqYdCLKiUp

  PublicKey:
    description: _PublicKey_ | Base58-encoded public key bytes
    type: string
    example: CNSX9rvPih5wvRj6gh6aSCoHXoYqTzsGLDLfvuUtV2s8

  RegularBalance:
    description: _RegularBalance_ | Simply a balance of a given asset or Waves regular balance (it is always a float number)
    type: number
    minimum: 0
    example: 143.95

  Score:
    description: _Score_ | Score of the blockchain on the Node
    type: long
    example: 2421273102391

  Size:
    description: _Size_ | Number of items in the full response (`list` property may contain not all the items)
    type: integer
    example: 1

  Timestamp:
    description: _Timestamp_ | Transaction issue time in milliseconds
    type: integer
    example: 1501793408

  TransactionAttachment:
    description: _TransactionAttachment_ | Arbitrary bytes attached to a transaction (maximum byte length is 140 bytes)
    type: string
    example: d3yC1LKr

  TransactionId:
    description: _TransactionId_ | Base58-encoded ID of a transaction
    type: string
    example: 8Hnenj6d4oyCQxdc2xE9F85vT9zuZ1KEZxcDA6sC2gAc

  TransactionSignature:
    description: _TransactionSignature_ | Base58-encoded bytes of transaction data signed with sender private key
    type: string
    example: 5ngquur4nqX1cVPK3Zaf9KqY1qNH6i7gF5EhaWeS8mZp1LADTVuPXmNUi12jeXSniGry5a7ThsMtWcC73pSU196o

  TransactionStatus:
    description: _TransactionStatus_ | Status of a transaction
    type: string
    enum:
      - confirmed
      - uncomfirmed

  TransactionType:
    description: _TransactionType_ | One of the existing transaction types
    type: string
    enum:
      # TODO : check for possibly missing transactions
      - transfer
      - issue
      - reissue
      - burn
      - createAlias
      - lease
      - cancelLeasing
      - exchange
    # TODO : rewrite examples in specific cases where this scheme is used

  TransactionsCount:
    description: _TransactionsCount_ | Number of transactions in the unconfirmed transactions pool
    type: integer
    minimum: 0
    maximum: 10000
    example: 327

parameters:

  # Path-related

  path_Address:
    in: path
    name: address
    required: true
    description: Wallet address
    schema:
      $ref: '#/schemas/Address'

  path_AssetId:
    in: path
    name: assetId
    required: true
    description: ID of an asset
    schema:
      $ref: '#/schemas/AssetId'

  path_BlockHeight:
    in: path
    name: blockHeight
    required: true
    description: Height of a wanted block
    schema:
      $ref: '#/schemas/BlockHeight'

  path_BlockSignature:
    in: path
    name: blockSignature
    required: true
    description: ID of a wanted block
    schema:
      $ref: '#/schemas/BlockSignature'

  path_PublicKey:
    in: path
    name: publicKey
    required: true
    description: User public key
    schema:
      $ref: '#/schemas/PublicKey'

  path_TransactionId:
    in: path
    name: transactionId
    required: true
    description: ID of a wanted transaction
    schema:
      $ref: '#/schemas/TransactionId'

  # Query-related

  query_AmountAsset:
    in: query
    name: amountAsset
    required: false
    description: Amount asset ID in DEX
    schema:
      $ref: '#/schemas/AssetId'

  query_Assets:
    in: query
    name: assets
    required: false
    description: Comma-separated IDs of the wanted assets
    schema:
      type: string
      example: WAVES,8LQW8f7P5d5PZM7GtZEBgaqRPGSzS3DfPuiXrURJ4AJS

  query_HeightFrom:
    in: query
    name: heightFrom
    required: false
    description: Height in the blockchain to start getting blocks at
    schema:
      $ref: '#/schemas/BlockHeight'

  query_HeightTo:
    in: query
    name: heightTo
    required: false
    description: Height in the blockchain to end getting blocks at
    schema:
      $ref: '#/schemas/BlockHeight'

  query_Issuer:
    in: query
    name: issuer
    required: false
    description: Transaction issuer
    schema:
      oneOf:
        - $ref: '#/schemas/Address'
        - $ref: '#/schemas/Alias'

  query_Limit:
    in: query
    name: limit
    required: false
    description: The number of items in list to return
    schema:
      type: integer
      minimum: 10
      maximum: 100
      default: 50

  query_Offset:
    in: query
    name: offset
    required: false
    description: The number of items in list to skip
    schema:
      type: integer
      default: 0

  query_PriceAsset:
    in: query
    name: amountAsset
    required: false
    description: Price asset ID in DEX
    schema:
      $ref: '#/schemas/AssetId'

  query_Q:
    in: query
    name: q
    required: false
    description: Search query string
    schema:
      type: string
      example: bitc

  query_Recipient:
    in: query
    name: recipient
    required: false
    description: Transaction recipient
    schema:
      oneOf:
        - $ref: '#/schemas/Address'
        - $ref: '#/schemas/Alias'

  query_Sender:
    in: query
    name: sender
    required: false
    description: Transaction sender
    schema:
      oneOf:
        - $ref: '#/schemas/Address'
        - $ref: '#/schemas/Alias'

  query_Type:
    in: query
    name: type
    required: false
    description: Transaction type
    schema:
      $ref: '#/schemas/TransactionType'

  # Header-related

  header_Signature:
    in: header
    name: Signature
    required: true
    description: Signature of a public key and the data from other header parameters (e.g. Timestamp)
    schema:
      $ref: '#/schemas/ArbitrarySignature'

  header_Timestamp:
    in: header
    name: Timestamp
    required: true
    description: Timestamp of a (usually) GET request
    schema:
      $ref: '#/schemas/Timestamp'

requestBodies:

  TransferTransaction:
    description: Request data object for a transfer transaction
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            transactionType:
              $ref: '#/schemas/TransactionType'
              example: transfer
            senderPublicKey:
              $ref: '#/schemas/PublicKey'
            recipient#address:
              $ref: '#/schemas/Address'
            recipient#alias:
              $ref: '#/schemas/Alias'
            assetId:
              $ref: '#/schemas/AssetId'
            amount:
              $ref: '#/schemas/Amount'
            feeAssetId:
              $ref: '#/schemas/AssetId'
            fee:
              $ref: '#/schemas/Amount'
            attachment:
              $ref: '#/schemas/TransactionAttachment'
            timestamp:
              $ref: '#/schemas/Timestamp'
            signature:
              $ref: '#/schemas/TransactionSignature'

  IssueTransaction:
    description: Request data object for an asset issue transaction
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            transactionType:
              $ref: '#/schemas/TransactionType'
              example: issue
            senderPublicKey:
              $ref: '#/schemas/PublicKey'
            name:
              $ref: '#/schemas/AssetName'
            description:
              $ref: '#/schemas/AssetDescription'
            precision:
              $ref: '#/schemas/AssetPrecision'
            quantity:
              $ref: '#/schemas/AssetQuantity'
            reissuable:
              $ref: '#/schemas/AssetIsReissuable'
            fee:
              $ref: '#/schemas/Amount'
            timestamp:
              $ref: '#/schemas/Timestamp'
            signature:
              $ref: '#/schemas/TransactionSignature'

  ReissueTransaction:
    description: Request data object for an asset reissue transaction
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            transactionType:
              $ref: '#/schemas/TransactionType'
              example: reissue
            senderPublicKey:
              $ref: '#/schemas/PublicKey'
            assetId:
              $ref: '#/schemas/AssetId'
            quantity:
              $ref: '#/schemas/AssetQuantity'
            reissuable:
              $ref: '#/schemas/AssetIsReissuable'
            fee:
              $ref: '#/schemas/Amount'
            timestamp:
              $ref: '#/schemas/Timestamp'
            signature:
              $ref: '#/schemas/TransactionSignature'

  BurnTransaction:
    description: Request data object for an asset burn transaction
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            transactionType:
              $ref: '#/schemas/TransactionType'
              example: burn
            senderPublicKey:
              $ref: '#/schemas/PublicKey'
            assetId:
              $ref: '#/schemas/AssetId'
            quantity:
              $ref: '#/schemas/AssetQuantity'
            fee:
              $ref: '#/schemas/Amount'
            timestamp:
              $ref: '#/schemas/Timestamp'
            signature:
              $ref: '#/schemas/TransactionSignature'

  CreateAliasTransaction:
    description: Request data object for an alias creation transaction
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            transactionType:
              $ref: '#/schemas/TransactionType'
              example: createAlias
            senderPublicKey:
              $ref: '#/schemas/PublicKey'
            alias:
              $ref: '#/schemas/Alias'
            fee:
              $ref: '#/schemas/Amount'
            timestamp:
              $ref: '#/schemas/Timestamp'
            signature:
              $ref: '#/schemas/TransactionSignature'

  LeaseTransaction:
    description: Request data object for a leasing start transaction
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            transactionType:
              $ref: '#/schemas/TransactionType'
              example: lease
            senderPublicKey:
              $ref: '#/schemas/PublicKey'
            recipient#address:
              $ref: '#/schemas/Address'
            recipient#alias:
              $ref: '#/schemas/Alias'
            amount:
              $ref: '#/schemas/Amount'
            fee:
              $ref: '#/schemas/Amount'
            timestamp:
              $ref: '#/schemas/Timestamp'
            signature:
              $ref: '#/schemas/TransactionSignature'

  CancelLeasingTransaction:
    description: Request data object for a leasing cancel transaction
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            transactionType:
              $ref: '#/schemas/TransactionType'
              example: cancelLeasing
            senderPublicKey:
              $ref: '#/schemas/PublicKey'
            transactionId:
              $ref: '#/schemas/TransactionId'
            fee:
              $ref: '#/schemas/Amount'
            timestamp:
              $ref: '#/schemas/Timestamp'
            signature:
              $ref: '#/schemas/TransactionSignature'

responses:

  success_TransactionCreated:
    description: Success code and name and the ID of new transaction
    content:
      application/json:
        schema:
          type: object
          properties:
            code:
              type: number
              example: 200
            name:
              type: string
              example: transaction.created
            transactionId:
              $ref: '#/schemas/TransactionId'

  # Errors

  error_InvalidAddress:
    description: Provided address in invalid
    content:
      application/json:
        schema:
          type: object
          properties:
            code:
              type: number
              example: 400
            name:
              type: string
              example: invalid.address

  error_InvalidAlias:
    description: Provided alias in invalid
    content:
      application/json:
        schema:
          type: object
          properties:
            code:
              type: number
              example: 400
            name:
              type: string
              example: invalid.alias

  error_InvalidAmount:
    description: Provided amount in invalid
    content:
      application/json:
        schema:
          type: object
          properties:
            code:
              type: number
              example: 400
            name:
              type: string
              example: invalid.amount

  error_InvalidAssetId:
    description: Provided asset ID is invalid
    content:
      application/json:
        schema:
          type: object
          properties:
            code:
              type: number
              example: 400
            name:
              type: string
              example: invalid.asset.id

  error_InvalidAttachment:
    description: Provided attachment is invalid
    content:
      application/json:
        schema:
          type: object
          properties:
            code:
              type: number
              example: 400
            name:
              type: string
              example: invalid.attachment

  error_InvalidBlockHeight:
    description: Provided height is invalid
    content:
      application/json:
        schema:
          type: object
          properties:
            code:
              type: number
              example: 400
            name:
              type: string
              example: invalid.block.height

  error_InvalidBlockSignature:
    description: Provided block signature is invalid
    content:
      application/json:
        schema:
          type: object
          properties:
            code:
              type: number
              example: 400
            name:
              type: string
              example: invalid.block.signature

  error_InvalidFeeAssetId:
    description: Provided fee asset ID is invalid
    content:
      application/json:
        schema:
          type: object
          properties:
            code:
              type: number
              example: 400
            name:
              type: string
              example: invalid.fee.asset.id

  error_InvalidPrecision:
    description: Provided asset precision is invalid
    content:
      application/json:
        schema:
          type: object
          properties:
            code:
              type: number
              example: 400
            name:
              type: string
              example: invalid.precision

  error_InvalidPublicKey:
    description: Provided public key is invalid
    content:
      application/json:
        schema:
          type: object
          properties:
            code:
              type: number
              example: 400
            name:
              type: string
              example: invalid.public.key

  error_InvalidQuantity:
    description: Provided asset quantity is invalid
    content:
      application/json:
        schema:
          type: object
          properties:
            code:
              type: number
              example: 400
            name:
              type: string
              example: invalid.quantity

  error_InvalidRecipient:
    description: Provided recipient address or alias is invalid
    content:
      application/json:
        schema:
          type: object
          properties:
            code:
              type: number
              example: 400
            name:
              type: string
              example: invalid.recipient

  error_InvalidTimestamp:
    description: Provided timestamp is invalid
    content:
      application/json:
        schema:
          type: object
          properties:
            code:
              type: number
              example: 400
            name:
              type: string
              example: invalid.timestamp

  error_InvalidTransactionId:
    description: Provided transaction ID is invalid
    content:
      application/json:
        schema:
          type: object
          properties:
            code:
              type: number
              example: 400
            name:
              type: string
              example: invalid.transaction.id

  error_InvalidSignature:
    description: Transaction signature doesn't match transaction data
    content:
      application/json:
        schema:
          type: object
          properties:
            code:
              type: number
              example: 400
            name:
              type: string
              example: invalid.transaction.signature

  error_OffsetOutOfRange:
    description: Parameter `offset` is out of range
    content:
      application/json:
        schema:
          type: object
          properties:
            code:
              type: number
              example: 400
            name:
              type: string
              example: offset.out.of.range
