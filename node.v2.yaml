openapi: "3.0.0"

info:
  version: 2.0.0
  title: Waves Node API
  description: API docs for Waves Node
  license:
    name: Apache 2.0
    url: https://github.com/wavesplatform/Waves/blob/master/LICENSE

servers:
  - url: https://nodes.wavesplatform.com/api/v2
    description: Mainnet
  - url: https://{hostname}:6869/api/v2
    description: Testnet
    variables:
      hostname:
        enum:
          - "52.30.47.67"
          - "52.28.66.217"
          - "52.77.111.219"
          - "52.51.92.182"
        default: "52.30.47.67"

components:
  $ref: 'components.yaml'

paths:

  /addresses/{address}:
    get:
      summary: Get Waves balance and the list of address aliases
      tags:
        - addresses
      parameters:
        - $ref: 'components.yaml#/parameters/path_Address'
      responses:
        200:
          description: Waves regular balance and the list of aliases
          content:
            application/json:
              schema:
                type: object
                properties:
                  wavesBalance:
                    $ref: 'components.yaml#/schemas/WavesDetailedBalance'
                  aliases:
                    type: array
                    items:
                      $ref: 'components.yaml#/schemas/Alias'
        400:
          $ref: 'components.yaml#/responses/error_InvalidAddress'

  /addresses/{address}/balances:
    get:
      summary: Get the list of balances for an address
      tags:
        - addresses
      parameters:
        - $ref: 'components.yaml#/parameters/path_Address'
        - $ref: 'components.yaml#/parameters/query_Assets'
        - $ref: 'components.yaml#/parameters/query_Limit'
        - $ref: 'components.yaml#/parameters/query_Offset'
      responses:
        200:
          description: List of assets with balances
          content:
            application/json:
              schema:
                type: object
                properties:
                  size:
                    $ref: 'components.yaml#/schemas/Size'
                  list:
                    type: array
                    items:
                      $ref: 'components.yaml#/schemas/Balance'
        400#1:
          $ref: 'components.yaml#/responses/error_InvalidAddress'
        400#2:
          $ref: 'components.yaml#/responses/error_OffsetOutOfRange'

  /addresses/{address}/transactions:
    get:
      summary: Get the list of transactions for an address
      tags:
        - addresses
      parameters:
        - $ref: 'components.yaml#/parameters/query_Type'
        - $ref: 'components.yaml#/parameters/query_Sender'
        - $ref: 'components.yaml#/parameters/query_Recipient'
        - $ref: 'components.yaml#/parameters/query_Limit'
        - $ref: 'components.yaml#/parameters/query_Offset'
        # TODO : fromTimestamp
        # TODO : toTimestamp
      responses:
        200:
          description: List of last transactions or those which match the parameters (all `list` properties are supposed to be merged)
          content:
            application/json:
              schema:
                type: object
                properties:
                  size:
                    $ref: 'components.yaml#/schemas/Size'
                  list#transfer:
                    type: array
                    items:
                      $ref: 'components.yaml#/schemas/TransferTransaction'
                  list#issue:
                    type: array
                    items:
                      $ref: 'components.yaml#/schemas/IssueTransaction'
                  list#reissue:
                    type: array
                    items:
                      $ref: 'components.yaml#/schemas/ReissueTransaction'
                  list#burn:
                    type: array
                    items:
                      $ref: 'components.yaml#/schemas/BurnTransaction'
                  list#alias:
                    type: array
                    items:
                      $ref: 'components.yaml#/schemas/AliasTransaction'
                  list#lease:
                    type: array
                    items:
                      $ref: 'components.yaml#/schemas/LeaseTransaction'
                  list#cancelLeasing:
                    type: array
                    items:
                      $ref: 'components.yaml#/schemas/CancelLeasingTransaction'
                  list:#exchange:
                    type: array
                    items:
                      $ref: 'components.yaml#/schemas/ExchangeTransaction'
        400:
          $ref: 'components.yaml#/responses/error_InvalidAddress'

  /addresses/{address}/transactions/unconfirmed:
    get:
      summary: Get unconfirmed transactions list by a given address
      tags:
        - addresses
      responses:
        200:
          description: List of unconfirmed transactions by address (all `list` properties are supposed to be merged)
          content:
            application/json:
              schema:
                type: object
                properties:
                  size:
                    $ref: 'components.yaml#/schemas/Size'
                  list#transfer:
                    type: array
                    items:
                      $ref: 'components.yaml#/schemas/TransferTransaction'
                  list#issue:
                    type: array
                    items:
                      $ref: 'components.yaml#/schemas/IssueTransaction'
                  list#reissue:
                    type: array
                    items:
                      $ref: 'components.yaml#/schemas/ReissueTransaction'
                  list#burn:
                    type: array
                    items:
                      $ref: 'components.yaml#/schemas/BurnTransaction'
                  list#alias:
                    type: array
                    items:
                      $ref: 'components.yaml#/schemas/AliasTransaction'
                  list#lease:
                    type: array
                    items:
                      $ref: 'components.yaml#/schemas/LeaseTransaction'
                  list#cancelLeasing:
                    type: array
                    items:
                      $ref: 'components.yaml#/schemas/CancelLeasingTransaction'
                  list:#exchange:
                    type: array
                    items:
                      $ref: 'components.yaml#/schemas/ExchangeTransaction'
        400:
          $ref: 'components.yaml#/responses/error_InvalidAddress'

  /aliases/{alias}:
    get:
      summary: Get the address which is related to a given alias
      tags:
        - aliases
      responses:
        200:
          description: Object with address
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    $ref: 'components.yaml#/schemas/Address'
        400:
          $ref: 'components.yaml#/responses/error_InvalidAlias'

  /assets:
    get:
      summary: Get the list of assets
      tags:
        - assets
      parameters:
        - $ref: 'components.yaml#/parameters/query_Issuer'
        - $ref: 'components.yaml#/parameters/query_Q'
        - $ref: 'components.yaml#/parameters/query_Limit'
        - $ref: 'components.yaml#/parameters/query_Offset'
      responses:
        200:
          description: List of assets matching the provided parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  size:
                    $ref: 'components.yaml#/schemas/Size'
                  list:
                    type: array
                    items:
                      $ref: 'components.yaml#/schemas/Asset'

  /assets/{assetId}:
    get:
      summary: Get info on a given asset and its issue transaction
      tags:
        - assets
      parameters:
        - $ref: 'components.yaml#/parameters/path_AssetId'
      responses:
        200:
          # TODO : the idea about array of transactions is controversial, maybe it's more right to add current calculated transactions impact
          description: Asset info and all its transactions — issue, reissue and burn — in chronological order (all `transactions` fields are supposed to be merged)
          content:
            application/json:
              schema:
                type: object
                properties:
                  asset:
                    $ref: 'components.yaml#/schemas/Asset'
                  transactions#issue:
                    type: array
                    items:
                      $ref: 'components.yaml#/schemas/IssueTransaction'
                  transactions#reissue:
                    type: array
                    items:
                      $ref: 'components.yaml#/schemas/ReissueTransaction'
                  transactions#burn:
                    type: array
                    items:
                      $ref: 'components.yaml#/schemas/BurnTransaction'
        400:
          $ref: 'components.yaml#/responses/error_InvalidAssetId'


  /assets/{assetId}/distribution:
    get:
      summary: Get asset balance distribution by accounts
      tags:
        - assets
      parameters:
        - $ref: 'components.yaml#/parameters/path_AssetId'
      responses:
        # TODO : 200 with map of addresses to regular balances
        400:
          $ref: 'components.yaml#/responses/error_InvalidAssetId'

  /blocks:
    get:
      summary: Get the list of blocks
      tags:
        - blocks
      parameters:
        - $ref: 'components.yaml#/parameters/query_Limit' # from
        - $ref: 'components.yaml#/parameters/query_Offset' # to
      responses:
        200:
          description: List of blocks
          content:
            application/json:
              schema:
                type: object
                properties:
                  size:
                    $ref: 'components.yaml#/schemas/Size'
                  list:
                    type: array
                    items:
                      $ref: 'components.yaml#/schemas/Block'
        400:
          $ref: 'components.yaml#/responses/error_OffsetOutOfRange'

  /blocks/at/{blockHeight}:
    get:
      summary: Get the block at a given height
      tags:
        - blocks
      parameters:
        - $ref: 'components.yaml#/parameters/path_BlockHeight'
      responses:
        200:
          description: Block object
          content:
            application/json:
              schema:
                $ref: 'components.yaml#/schemas/Block'
        400:
          $ref: 'components.yaml#/responses/error_InvalidBlockHeight'

  /blocks/forged-by/{address}:
    get:
      summary: Get the list of blocks forged by a given address
      tags:
        - blocks
      # offset
      # limit

  /blocks/height:
    get:
      summary: Get current blockchain height
      tags:
        - blocks
      responses:
        200:
          description: Object with blockchain height
          content:
            application/json:
              schema:
                type: object
                properties:
                  height:
                    $ref: 'components.yaml#/schemas/BlockHeight'

  /blocks/{blockSignature}:
    get:
      summary: Get the block by a given signature
      tags:
        - blocks
      parameters:
        - $ref: 'components.yaml#/parameters/path_BlockSignature'
      responses:
        200:
          description: Block object
          content:
            application/json:
              schema:
                $ref: 'components.yaml#/schemas/Block'
        400:
          $ref: 'components.yaml#/responses/error_InvalidBlockSignature'

  /transactions#transfer:
    post:
      summary: Send a transfer transaction (#transfer is not a part of the path)
      tags:
        - transactions
      requestBody:
        $ref: 'components.yaml#/requestBodies/TransferTransaction'
      responses:
        200:
          $ref: 'components.yaml#/responses/success_TransactionCreated'

  /transactions#issue:
    post:
      summary: Send an asset issue transaction (#issue is not a part of the path)
      tags:
        - transactions
      requestBody:
        $ref: 'components.yaml#/requestBodies/IssueTransaction'
      responses:
        200:
          $ref: 'components.yaml#/responses/success_TransactionCreated'

  /transactions#reissue:
    post:
      summary: Send an asset reissue transaction (#reissue is not a part of the path)
      tags:
        - transactions
      requestBody:
        $ref: 'components.yaml#/requestBodies/ReissueTransaction'
      responses:
        200:
          $ref: 'components.yaml#/responses/success_TransactionCreated'

  /transactions#burn:
    post:
      summary: Send an asset burn transaction (#burn is not a part of the path)
      tags:
        - transactions
      requestBody:
        $ref: 'components.yaml#/requestBodies/BurnTransaction'
      responses:
        200:
          $ref: 'components.yaml#/responses/success_TransactionCreated'

  /transactions#alias:
    post:
      summary: Send an alias creation transaction (#alias is not a part of the path)
      tags:
        - transactions
      requestBody:
        $ref: 'components.yaml#/requestBodies/AliasTransaction'
      responses:
        200:
          $ref: 'components.yaml#/responses/success_TransactionCreated'

  /transactions#lease:
    post:
      summary: Send a leasing start transaction (#lease is not a part of the path)
      tags:
        - transactions
      requestBody:
        $ref: 'components.yaml#/requestBodies/LeaseTransaction'
      responses:
        200:
          $ref: 'components.yaml#/responses/success_TransactionCreated'

  /transactions#cancelLeasing:
    post:
      summary: Send a leasing cancel transaction (#cancelLeasing is not a part of the path)
      tags:
        - transactions
      requestBody:
        $ref: 'components.yaml#/requestBodies/CancelLeasingTransaction'
      responses:
        200:
          $ref: 'components.yaml#/responses/success_TransactionCreated'

  /transactions/{transactionId}:
    get:
      summary: Get the details of a given transaction
      tags:
        - transactions

  /transactions/unconfirmed/size:
    get:
      summary: Get current size of the unconfirmed transactions pool
      tags:
        - transactions
      responses:
        200:
          description: Object with UTX size
          content:
            application/json:
              schema:
                type: object
                properties:
                  size:
                    $ref: 'components.yaml#/schemas/UtxSize'

  /transactions/unconfirmed/{transactionId}:
    get:
      summary: Get transaction details if it's still in unconfirmed transactions pool
      tags:
        - transactions
